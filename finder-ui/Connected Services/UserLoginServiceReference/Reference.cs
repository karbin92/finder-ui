//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace finder_ui.UserLoginServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewUser", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class NewUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnUser", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class ReturnUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceUser", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceRole RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceRole Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceRole", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceStatus", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceFlaggedUser", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceFlaggedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceUser FlaggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlaggedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceUser WhoIsFlaggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WhoIsFlaggedIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceUser FlaggedBy {
            get {
                return this.FlaggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.FlaggedByField, value) != true)) {
                    this.FlaggedByField = value;
                    this.RaisePropertyChanged("FlaggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlaggedByUserId {
            get {
                return this.FlaggedByUserIdField;
            }
            set {
                if ((this.FlaggedByUserIdField.Equals(value) != true)) {
                    this.FlaggedByUserIdField = value;
                    this.RaisePropertyChanged("FlaggedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceUser WhoIsFlagged {
            get {
                return this.WhoIsFlaggedField;
            }
            set {
                if ((object.ReferenceEquals(this.WhoIsFlaggedField, value) != true)) {
                    this.WhoIsFlaggedField = value;
                    this.RaisePropertyChanged("WhoIsFlagged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WhoIsFlaggedID {
            get {
                return this.WhoIsFlaggedIDField;
            }
            set {
                if ((this.WhoIsFlaggedIDField.Equals(value) != true)) {
                    this.WhoIsFlaggedIDField = value;
                    this.RaisePropertyChanged("WhoIsFlaggedID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceBlockedUser", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceBlockedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceAdmin BannerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuspendedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private finder_ui.UserLoginServiceReference.InterfaceUser UserObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceAdmin Banner {
            get {
                return this.BannerField;
            }
            set {
                if ((object.ReferenceEquals(this.BannerField, value) != true)) {
                    this.BannerField = value;
                    this.RaisePropertyChanged("Banner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuspendedBy {
            get {
                return this.SuspendedByField;
            }
            set {
                if ((this.SuspendedByField.Equals(value) != true)) {
                    this.SuspendedByField = value;
                    this.RaisePropertyChanged("SuspendedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public finder_ui.UserLoginServiceReference.InterfaceUser UserObject {
            get {
                return this.UserObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.UserObjectField, value) != true)) {
                    this.UserObjectField = value;
                    this.RaisePropertyChanged("UserObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterfaceAdmin", Namespace="http://schemas.datacontract.org/2004/07/LoginProject.Interface")]
    [System.SerializableAttribute()]
    public partial class InterfaceAdmin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserLoginServiceReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/IsAlive", ReplyAction="http://tempuri.org/ILoginService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/IsAlive", ReplyAction="http://tempuri.org/ILoginService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountActiveUsers", ReplyAction="http://tempuri.org/ILoginService/CountActiveUsersResponse")]
        int CountActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountActiveUsers", ReplyAction="http://tempuri.org/ILoginService/CountActiveUsersResponse")]
        System.Threading.Tasks.Task<int> CountActiveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountFlaggedUsers", ReplyAction="http://tempuri.org/ILoginService/CountFlaggedUsersResponse")]
        int CountFlaggedUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountFlaggedUsers", ReplyAction="http://tempuri.org/ILoginService/CountFlaggedUsersResponse")]
        System.Threading.Tasks.Task<int> CountFlaggedUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountBlockedUsers", ReplyAction="http://tempuri.org/ILoginService/CountBlockedUsersResponse")]
        int CountBlockedUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CountBlockedUsers", ReplyAction="http://tempuri.org/ILoginService/CountBlockedUsersResponse")]
        System.Threading.Tasks.Task<int> CountBlockedUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CreateUser", ReplyAction="http://tempuri.org/ILoginService/CreateUserResponse")]
        finder_ui.UserLoginServiceReference.ReturnUser CreateUser(finder_ui.UserLoginServiceReference.NewUser NewUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CreateUser", ReplyAction="http://tempuri.org/ILoginService/CreateUserResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.ReturnUser> CreateUserAsync(finder_ui.UserLoginServiceReference.NewUser NewUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserLogin", ReplyAction="http://tempuri.org/ILoginService/UserLoginResponse")]
        bool UserLogin(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserLogin", ReplyAction="http://tempuri.org/ILoginService/UserLoginResponse")]
        System.Threading.Tasks.Task<bool> UserLoginAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AdminLogin", ReplyAction="http://tempuri.org/ILoginService/AdminLoginResponse")]
        bool AdminLogin(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AdminLogin", ReplyAction="http://tempuri.org/ILoginService/AdminLoginResponse")]
        System.Threading.Tasks.Task<bool> AdminLoginAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DeleteUser", ReplyAction="http://tempuri.org/ILoginService/DeleteUserResponse")]
        bool DeleteUser(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DeleteUser", ReplyAction="http://tempuri.org/ILoginService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UnflagUser", ReplyAction="http://tempuri.org/ILoginService/UnflagUserResponse")]
        bool UnflagUser(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UnflagUser", ReplyAction="http://tempuri.org/ILoginService/UnflagUserResponse")]
        System.Threading.Tasks.Task<bool> UnflagUserAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckUser", ReplyAction="http://tempuri.org/ILoginService/CheckUserResponse")]
        bool CheckUser(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckUser", ReplyAction="http://tempuri.org/ILoginService/CheckUserResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckModerator", ReplyAction="http://tempuri.org/ILoginService/CheckModeratorResponse")]
        bool CheckModerator(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckModerator", ReplyAction="http://tempuri.org/ILoginService/CheckModeratorResponse")]
        System.Threading.Tasks.Task<bool> CheckModeratorAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ModeratorLogin", ReplyAction="http://tempuri.org/ILoginService/ModeratorLoginResponse")]
        bool ModeratorLogin(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ModeratorLogin", ReplyAction="http://tempuri.org/ILoginService/ModeratorLoginResponse")]
        System.Threading.Tasks.Task<bool> ModeratorLoginAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserId", ReplyAction="http://tempuri.org/ILoginService/GetUserIdResponse")]
        int GetUserId(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserId", ReplyAction="http://tempuri.org/ILoginService/GetUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserIdAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserById", ReplyAction="http://tempuri.org/ILoginService/GetUserByIdResponse")]
        finder_ui.UserLoginServiceReference.InterfaceUser GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetUserById", ReplyAction="http://tempuri.org/ILoginService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UpdateAccountInfo", ReplyAction="http://tempuri.org/ILoginService/UpdateAccountInfoResponse")]
        bool UpdateAccountInfo(finder_ui.UserLoginServiceReference.ReturnUser UpdatedAccountInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UpdateAccountInfo", ReplyAction="http://tempuri.org/ILoginService/UpdateAccountInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateAccountInfoAsync(finder_ui.UserLoginServiceReference.ReturnUser UpdatedAccountInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetFlaggedUsers", ReplyAction="http://tempuri.org/ILoginService/GetFlaggedUsersResponse")]
        finder_ui.UserLoginServiceReference.InterfaceFlaggedUser[] GetFlaggedUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetFlaggedUsers", ReplyAction="http://tempuri.org/ILoginService/GetFlaggedUsersResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceFlaggedUser[]> GetFlaggedUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetBlockedUsers", ReplyAction="http://tempuri.org/ILoginService/GetBlockedUsersResponse")]
        finder_ui.UserLoginServiceReference.InterfaceBlockedUser[] GetBlockedUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetBlockedUsers", ReplyAction="http://tempuri.org/ILoginService/GetBlockedUsersResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceBlockedUser[]> GetBlockedUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetModerators", ReplyAction="http://tempuri.org/ILoginService/GetModeratorsResponse")]
        finder_ui.UserLoginServiceReference.InterfaceUser[] GetModerators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetModerators", ReplyAction="http://tempuri.org/ILoginService/GetModeratorsResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser[]> GetModeratorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdmins", ReplyAction="http://tempuri.org/ILoginService/GetAdminsResponse")]
        finder_ui.UserLoginServiceReference.InterfaceAdmin[] GetAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdmins", ReplyAction="http://tempuri.org/ILoginService/GetAdminsResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin[]> GetAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetActiveUsers", ReplyAction="http://tempuri.org/ILoginService/GetActiveUsersResponse")]
        finder_ui.UserLoginServiceReference.InterfaceUser[] GetActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetActiveUsers", ReplyAction="http://tempuri.org/ILoginService/GetActiveUsersResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser[]> GetActiveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/FlagUser", ReplyAction="http://tempuri.org/ILoginService/FlagUserResponse")]
        bool FlagUser(int FlaggedByUserId, string Reason, int FlaggedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/FlagUser", ReplyAction="http://tempuri.org/ILoginService/FlagUserResponse")]
        System.Threading.Tasks.Task<bool> FlagUserAsync(int FlaggedByUserId, string Reason, int FlaggedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/BlockUser", ReplyAction="http://tempuri.org/ILoginService/BlockUserResponse")]
        bool BlockUser(int Id, int AdminId, string reason, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/BlockUser", ReplyAction="http://tempuri.org/ILoginService/BlockUserResponse")]
        System.Threading.Tasks.Task<bool> BlockUserAsync(int Id, int AdminId, string reason, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AssignModeratorRole", ReplyAction="http://tempuri.org/ILoginService/AssignModeratorRoleResponse")]
        bool AssignModeratorRole(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AssignModeratorRole", ReplyAction="http://tempuri.org/ILoginService/AssignModeratorRoleResponse")]
        System.Threading.Tasks.Task<bool> AssignModeratorRoleAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AssignUserRole", ReplyAction="http://tempuri.org/ILoginService/AssignUserRoleResponse")]
        bool AssignUserRole(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AssignUserRole", ReplyAction="http://tempuri.org/ILoginService/AssignUserRoleResponse")]
        System.Threading.Tasks.Task<bool> AssignUserRoleAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/EmailExist", ReplyAction="http://tempuri.org/ILoginService/EmailExistResponse")]
        bool EmailExist(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/EmailExist", ReplyAction="http://tempuri.org/ILoginService/EmailExistResponse")]
        System.Threading.Tasks.Task<bool> EmailExistAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UsernameExist", ReplyAction="http://tempuri.org/ILoginService/UsernameExistResponse")]
        bool UsernameExist(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UsernameExist", ReplyAction="http://tempuri.org/ILoginService/UsernameExistResponse")]
        System.Threading.Tasks.Task<bool> UsernameExistAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserIdExist", ReplyAction="http://tempuri.org/ILoginService/UserIdExistResponse")]
        bool UserIdExist(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserIdExist", ReplyAction="http://tempuri.org/ILoginService/UserIdExistResponse")]
        System.Threading.Tasks.Task<bool> UserIdExistAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdminByUsername", ReplyAction="http://tempuri.org/ILoginService/GetAdminByUsernameResponse")]
        finder_ui.UserLoginServiceReference.InterfaceAdmin GetAdminByUsername(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdminByUsername", ReplyAction="http://tempuri.org/ILoginService/GetAdminByUsernameResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin> GetAdminByUsernameAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdminById", ReplyAction="http://tempuri.org/ILoginService/GetAdminByIdResponse")]
        finder_ui.UserLoginServiceReference.InterfaceAdmin GetAdminById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAdminById", ReplyAction="http://tempuri.org/ILoginService/GetAdminByIdResponse")]
        System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin> GetAdminByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : finder_ui.UserLoginServiceReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<finder_ui.UserLoginServiceReference.ILoginService>, finder_ui.UserLoginServiceReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public int CountActiveUsers() {
            return base.Channel.CountActiveUsers();
        }
        
        public System.Threading.Tasks.Task<int> CountActiveUsersAsync() {
            return base.Channel.CountActiveUsersAsync();
        }
        
        public int CountFlaggedUsers() {
            return base.Channel.CountFlaggedUsers();
        }
        
        public System.Threading.Tasks.Task<int> CountFlaggedUsersAsync() {
            return base.Channel.CountFlaggedUsersAsync();
        }
        
        public int CountBlockedUsers() {
            return base.Channel.CountBlockedUsers();
        }
        
        public System.Threading.Tasks.Task<int> CountBlockedUsersAsync() {
            return base.Channel.CountBlockedUsersAsync();
        }
        
        public finder_ui.UserLoginServiceReference.ReturnUser CreateUser(finder_ui.UserLoginServiceReference.NewUser NewUser) {
            return base.Channel.CreateUser(NewUser);
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.ReturnUser> CreateUserAsync(finder_ui.UserLoginServiceReference.NewUser NewUser) {
            return base.Channel.CreateUserAsync(NewUser);
        }
        
        public bool UserLogin(string Email, string Password) {
            return base.Channel.UserLogin(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> UserLoginAsync(string Email, string Password) {
            return base.Channel.UserLoginAsync(Email, Password);
        }
        
        public bool AdminLogin(string Username, string Password) {
            return base.Channel.AdminLogin(Username, Password);
        }
        
        public System.Threading.Tasks.Task<bool> AdminLoginAsync(string Username, string Password) {
            return base.Channel.AdminLoginAsync(Username, Password);
        }
        
        public bool DeleteUser(int UserId) {
            return base.Channel.DeleteUser(UserId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int UserId) {
            return base.Channel.DeleteUserAsync(UserId);
        }
        
        public bool UnflagUser(int UserId) {
            return base.Channel.UnflagUser(UserId);
        }
        
        public System.Threading.Tasks.Task<bool> UnflagUserAsync(int UserId) {
            return base.Channel.UnflagUserAsync(UserId);
        }
        
        public bool CheckUser(string Email, string Password) {
            return base.Channel.CheckUser(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAsync(string Email, string Password) {
            return base.Channel.CheckUserAsync(Email, Password);
        }
        
        public bool CheckModerator(string Email, string Password) {
            return base.Channel.CheckModerator(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckModeratorAsync(string Email, string Password) {
            return base.Channel.CheckModeratorAsync(Email, Password);
        }
        
        public bool ModeratorLogin(string Email, string Password) {
            return base.Channel.ModeratorLogin(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> ModeratorLoginAsync(string Email, string Password) {
            return base.Channel.ModeratorLoginAsync(Email, Password);
        }
        
        public int GetUserId(string Email) {
            return base.Channel.GetUserId(Email);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdAsync(string Email) {
            return base.Channel.GetUserIdAsync(Email);
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceUser GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public bool UpdateAccountInfo(finder_ui.UserLoginServiceReference.ReturnUser UpdatedAccountInfo) {
            return base.Channel.UpdateAccountInfo(UpdatedAccountInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAccountInfoAsync(finder_ui.UserLoginServiceReference.ReturnUser UpdatedAccountInfo) {
            return base.Channel.UpdateAccountInfoAsync(UpdatedAccountInfo);
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceFlaggedUser[] GetFlaggedUsers() {
            return base.Channel.GetFlaggedUsers();
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceFlaggedUser[]> GetFlaggedUsersAsync() {
            return base.Channel.GetFlaggedUsersAsync();
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceBlockedUser[] GetBlockedUsers() {
            return base.Channel.GetBlockedUsers();
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceBlockedUser[]> GetBlockedUsersAsync() {
            return base.Channel.GetBlockedUsersAsync();
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceUser[] GetModerators() {
            return base.Channel.GetModerators();
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser[]> GetModeratorsAsync() {
            return base.Channel.GetModeratorsAsync();
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceAdmin[] GetAdmins() {
            return base.Channel.GetAdmins();
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin[]> GetAdminsAsync() {
            return base.Channel.GetAdminsAsync();
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceUser[] GetActiveUsers() {
            return base.Channel.GetActiveUsers();
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceUser[]> GetActiveUsersAsync() {
            return base.Channel.GetActiveUsersAsync();
        }
        
        public bool FlagUser(int FlaggedByUserId, string Reason, int FlaggedUserId) {
            return base.Channel.FlagUser(FlaggedByUserId, Reason, FlaggedUserId);
        }
        
        public System.Threading.Tasks.Task<bool> FlagUserAsync(int FlaggedByUserId, string Reason, int FlaggedUserId) {
            return base.Channel.FlagUserAsync(FlaggedByUserId, Reason, FlaggedUserId);
        }
        
        public bool BlockUser(int Id, int AdminId, string reason, System.DateTime dateTo) {
            return base.Channel.BlockUser(Id, AdminId, reason, dateTo);
        }
        
        public System.Threading.Tasks.Task<bool> BlockUserAsync(int Id, int AdminId, string reason, System.DateTime dateTo) {
            return base.Channel.BlockUserAsync(Id, AdminId, reason, dateTo);
        }
        
        public bool AssignModeratorRole(int ID) {
            return base.Channel.AssignModeratorRole(ID);
        }
        
        public System.Threading.Tasks.Task<bool> AssignModeratorRoleAsync(int ID) {
            return base.Channel.AssignModeratorRoleAsync(ID);
        }
        
        public bool AssignUserRole(int ID) {
            return base.Channel.AssignUserRole(ID);
        }
        
        public System.Threading.Tasks.Task<bool> AssignUserRoleAsync(int ID) {
            return base.Channel.AssignUserRoleAsync(ID);
        }
        
        public bool EmailExist(string Email) {
            return base.Channel.EmailExist(Email);
        }
        
        public System.Threading.Tasks.Task<bool> EmailExistAsync(string Email) {
            return base.Channel.EmailExistAsync(Email);
        }
        
        public bool UsernameExist(string Username) {
            return base.Channel.UsernameExist(Username);
        }
        
        public System.Threading.Tasks.Task<bool> UsernameExistAsync(string Username) {
            return base.Channel.UsernameExistAsync(Username);
        }
        
        public bool UserIdExist(int ID) {
            return base.Channel.UserIdExist(ID);
        }
        
        public System.Threading.Tasks.Task<bool> UserIdExistAsync(int ID) {
            return base.Channel.UserIdExistAsync(ID);
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceAdmin GetAdminByUsername(string Username) {
            return base.Channel.GetAdminByUsername(Username);
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin> GetAdminByUsernameAsync(string Username) {
            return base.Channel.GetAdminByUsernameAsync(Username);
        }
        
        public finder_ui.UserLoginServiceReference.InterfaceAdmin GetAdminById(int Id) {
            return base.Channel.GetAdminById(Id);
        }
        
        public System.Threading.Tasks.Task<finder_ui.UserLoginServiceReference.InterfaceAdmin> GetAdminByIdAsync(int Id) {
            return base.Channel.GetAdminByIdAsync(Id);
        }
    }
}
